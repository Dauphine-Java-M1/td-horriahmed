Nom : HORRI Ahmed

***************************************************TD encapsMuta***********************************************************************
EXO 1:POINT

1--> cela fonction car la foction system.out.println applique la fonction toString par deafut sur l'object point
en plus la methode main est dna la meme classe ce qui fait a pu acceder au deux Attributs malgré ils sont privés.

2--> y a une erreur sur les deux attributs p.x et p.y
pour remedier l'erreur il faudra ajouter les fonctions public "getX" et "getY" et les appelées dans la methodes main comme suit :

/** dans la fonction point**/

public double getX() {
	 return x;
 }
 
 public double getY() {
	 return y;
 }

 /** dans la fonction main**/
System.out.println(p.getX()+""+p.getY());

3--> les attributs doivent restée privés, pour des raison de sécurité " les attributs en privés et les méthodes en public" c'est le concept de l'enacpsulation 

4--> accesseeur : c'est les fonction "getNomAttribut" qui sont en publique et permettre d'acceder au attribut privé de la calsse dans n'importe quel classe.
oui on doit les utiliser ici "getX()" et "getY()"

5--> le constrectur par defaut marche plus il faut ajouter un ou modifier les parametre du constrecteur ...
6--> il faut passé par parametre les valeur initial pour le constrecteur dans la classe main par exemeple 
Point p =new Point(0.0,0.0);
7--> il faut ajouter un Attribut static dans la calss Point et l'incremeter dans le constrecteur pour que a chaque creation de Point on 
le incremente a un.
8--> le compilateur sait quel constrecteur doit appler en comparant la siganteur de chaque constrecteur.

Exo2:
1--> il affiche True pour(p1==p2) et false pour (p1==p3) car system.out.print() elle fait appel a la fonction Equals() 
par defaut qui compare l'addresse memoire.
3--> ca retourner 1 pour p2 et -1 pour p3, il a returner 1 pour p2 car la mathode equals par defaut pour comprer si y a un element dans la 
liste pou pas et comme p1 a la meme adresse que p2 alors il affiche l'index de p1

pour regler le probleme il redefinire la class equals

EXO3:
1--> si on n'ajoute pas la cpacité du tableau on peut pas creer le tableau , et si on n'ajoute pas le nombre de points ajoutées o peut pas
parcourir le tableau.
5--> si on on fait passé null en argument on aurra une erreur dans la mathodes isSameAs() car elle traite pas le cas ou le l'arrgument est
 null, meme si on rajoute add(null) avant.
6--> pointCpacity : on pourra la supprimer car likedList a une capacité infinie.
     nbPoints:renvoie la tille de la liste "list.size()";
     contains:on pourra utiliser la methodes contains() de la classe linkedList pour tester si un points est dans la liste ou pas.
	

Exo4:
-->1) elle peut avoir deux signatures "public void translate(double px, double py)" et "public Point translate(Point p)".
-->5)
-->6)
-->9) oui on doit la faire comme une methodes static car on a pas besoin d'instencier la classe pour appler la methodes.

EXO5: ANNEAUX
-->1) oui on doit utilisé l'héritage car un Anneaux est un sorte de circle.
-->4) le probleme sans code supplémentaire est que on affiche pas le rayon interne .

************************************************************************TD02:MVC************************************************************

Exo1:Vue
5--> 
6-->Swing est une boîte à outils de widgets d’interface graphique pour Java qui est une extension de AWTmasi AWT est la boîte à outils 
de widgets d’interface utilisateur originale de Java, dépendante de la plate-forme


Exo2:Modèle



  